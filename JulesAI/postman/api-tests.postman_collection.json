{
  "info": {
    "name": "JulesAI GraphQL Tests",
    "_postman_id": "abc123",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Login - Valid Credentials",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"query\":\"mutation Login($email: String!, $password: String!) { login(email: $email, password: $password) { token user { id email } } }\",\"variables\":{\"email\":\"qa@julesai.com\",\"password\":\"QaJULES2023!\"}}"
        },
        "url": {
          "raw": "{{baseUrl}}",
          "host": [
            "{{baseUrl}}"
          ]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "  pm.response.to.have.status(200);",
              "});",
              "pm.test(\"Login successful and token returned\", function () {",
              "  var json = pm.response.json();",
              "  pm.expect(json.data.login.token).to.be.a('string');",
              "  pm.expect(json.data.login.user.email).to.eql('qa@julesai.com');",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Login - Invalid Credentials",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"query\":\"mutation Login($email: String!, $password: String!) { login(email: $email, password: $password) { token user { id email } } }\",\"variables\":{\"email\":\"wrong@email.com\",\"password\":\"wrongpass\"}}"
        },
        "url": {
          "raw": "{{baseUrl}}",
          "host": [
            "{{baseUrl}}"
          ]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "  pm.response.to.have.status(200);",
              "});",
              "pm.test(\"Login should fail\", function () {",
              "  var json = pm.response.json();",
              "  pm.expect(json.errors).to.be.an('array');",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Error Handling - Invalid Query",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"query\":\"query Invalid { missingField }\"}"
        },
        "url": {
          "raw": "{{baseUrl}}",
          "host": [
            "{{baseUrl}}"
          ]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Returns GraphQL error for invalid query\", function () {",
              "  var json = pm.response.json();",
              "  pm.expect(json.errors).to.be.an('array');",
              "});"
            ]
          }
        }
      ]
    }
  ]
}
